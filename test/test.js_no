'use strict'

// this is a hack to get rid of the ECONNRESET errors
// but it does not work :-(
const http = require('http')
http.globalAgent.maxSockets = Infinity

const supertest = require('supertest')
const should = require('should')
const appPassFile = require('../appPass.json')

const app = require('../server.js')

global.describe('hooks', function () {
  global.before(function () {
    app.inject({ url: '127.0.0.1:4001' }, function (err) {
      if (err) throw err
      console.log('Server running at:', app.info.uri)
    })
  })
})

// does not work: error
// Uncaught TypeError: Cannot read property 'should' of undefined
// const server = supertest(app)

// const server = supertest.agent('http://127.0.0.1:4001')
const server = supertest('http://127.0.0.1:4001')

// skipping because if not, ECONNRESET happens ???!!!

global.describe.skip('/beobKarte', function () {
  global.it('should return 1 row for beob_infospezies with NO_NOTE 214510', function (done) {
    server
      .get('/beobKarte/apId=/tpopId=/beobId=214510/nichtZuzuordnen=')
      .end((err, res) => {
        if (err) throw err
        res.body.length.should.equal(1)
        done()
      })
  })
  global.it('should return more than 10 rows for beobzuordnung with tpopId 1373951429', function (done) {
    server
      .get('/beobKarte/apId=/tpopId=1373951429/beobId=/nichtZuzuordnen=')
      .end((err, res) => {
        if (err) throw err
        res.body.length.should.be.above(10)
        done()
      })
  })
  global.it('should return more than 5 rows for beobzuordnung with nichtZuzuordnen and apId 206200', function (done) {
    server
      .get('/beobKarte/apId=206200/tpopId=/beobId=/nichtZuzuordnen=1')
      .end((err, res) => {
        if (err) throw err
        res.body.length.should.be.above(5)
        done()
      })
  })
  global.it('should return more than 90 rows for beobzuordnung with apId 206200', function (done) {
    server
      .get('/beobKarte/apId=206200/tpopId=/beobId=/nichtZuzuordnen=')
      .end((err, res) => {
        if (err) throw err
        res.body.length.should.be.above(90)
        done()
      })
  })
})

global.describe.skip('/beobNaechsteTpop', function () {
  global.it('should return one TPop for ApId 206200 and a set of koordinates', function (done) {
    server
      .get('/beobNaechsteTpop/apId=206200/X=682226/Y=268513')
      .end((err, res) => {
        if (err) throw err
        res.body.length.should.equal(1)
        done()
      })
  })
})

global.describe.skip('/beobZuordnen', function () {
  global.it('should return more than 300 rows for ApId 206200', function (done) {
    server
      .get('/beobZuordnen/apId=206200')
      .end((err, res) => {
        if (err) throw err
        res.body.length.should.be.above(300)
        done()
      })
  })
})

global.describe('/exportView', function () {
  global.it('should return text/x-csv for view v_ap', function (done) {
    server
      .get('/exportView/csv/view=v_ap/filename=test')
      .end((err, res) => {
        if (err) throw err
        res.status.should.equal(200)
        res.type.should.equal('text/x-csv')
        done()
      })
  })
  global.it('should return text/x-csv for view v_ap and ApArtId 206200', function (done) {
    server
      .get('/exportView/csv/view=v_ap/filename=test/206200')
      .end((err, res) => {
        if (err) throw err
        res.status.should.equal(200)
        res.type.should.equal('text/x-csv')
        done()
      })
  })
})

global.describe('/exportViewWhereIdIn', function () {
  global.it('should return text/x-csv for view v_ap and ApId 900 and 206200', function (done) {
    server
      .get('/exportViewWhereIdIn/csv/view=v_ap/idName=ApArtId/idListe=900,206200/filename=test')
      .end((err, res) => {
        if (err) throw err
        res.status.should.equal(200)
        res.type.should.equal('text/x-csv')
        done()
      })
  })
})
